pipeline {
    agent any

    tools {
        nodejs 'NodeJS'
        jdk 'jdk-21'
        gradle 'gradle-8.14.3'
    }

    environment {
        // 백엔드 이미지 정보
        BACKEND_IMAGE_TAG = "v1.0.0"
        BACKEND_IMAGE_NAME = "somlh1212/travelmap-backend:${BACKEND_IMAGE_TAG}"
        BACKEND_IMAGE_LATEST_NAME = "somlh1212/travelmap-backend:latest"

        // 프론트엔드 이미지 정보
        FRONTEND_IMAGE_TAG = "v1.0.0"
        FRONTEND_IMAGE_NAME = "somlh1212/travelmap-frontend:${FRONTEND_IMAGE_TAG}"
        FRONTEND_IMAGE_LATEST_NAME = "somlh1212/travelmap-frontend:latest"

        // Kubernetes context
        K8S_CONTEXT = "kubernetes-admin@kubernetes"
        NAMESPACE = "travelmap"
    }

    stages {

        stage('Build Backend') {
            steps {
                dir('backend') {
                    sh './gradlew clean build'
                }
            }
        }

        stage('Build & Push Backend Docker Image') {
            steps {
                dir('backend') {
                    sh """
                        docker build -t ${BACKEND_IMAGE_NAME} .
                        docker tag ${BACKEND_IMAGE_NAME} ${BACKEND_IMAGE_LATEST_NAME}
                        docker push ${BACKEND_IMAGE_NAME}
                        docker push ${BACKEND_IMAGE_LATEST_NAME}
                    """
                }
            }
        }

        stage('Build & Push Frontend Docker Image') {
            steps {
                dir('frontend') {
                    sh 'npm install'
                    sh 'npm run build'
                    sh """
                        docker build -t ${FRONTEND_IMAGE_NAME} .
                        docker tag ${FRONTEND_IMAGE_NAME} ${FRONTEND_IMAGE_LATEST_NAME}
                        docker push ${FRONTEND_IMAGE_NAME}
                        docker push ${FRONTEND_IMAGE_LATEST_NAME}
                    """
                }
            }
        }

        stage('Prepare K8s Namespace & Secret') {
            steps {
                sh """
                    kubectl --context=${K8S_CONTEXT} get ns ${NAMESPACE} || kubectl --context=${K8S_CONTEXT} create ns ${NAMESPACE}
                    kubectl --context=${K8S_CONTEXT} apply -f /home/jenkins/k8s/secret.yaml -n ${NAMESPACE}
                """
            }
        }

        stage('Deploy to K8s with Helm') {
            steps {
                sh """
                    helm upgrade --install travelmap ./helm/travelmap \\
                        --namespace ${NAMESPACE} \\
                        -f ./helm/travelmap/values-k8s.yaml \\
                        --set backend.image.tag=${BACKEND_IMAGE_TAG} \\
                        --set frontend.image.tag=${FRONTEND_IMAGE_TAG}
                """
            }
        }

        stage('Wait for Deployment Rollout') {
            steps {
                sh """
                    kubectl --context=${K8S_CONTEXT} -n ${NAMESPACE} rollout status deployment/travelmap-backend
                    kubectl --context=${K8S_CONTEXT} -n ${NAMESPACE} rollout status deployment/travelmap-frontend
                """
            }
        }
    }
}
